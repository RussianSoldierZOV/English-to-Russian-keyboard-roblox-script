local UserInputService = game:GetService("UserInputService")

-- Function to convert English text to Russian-like text
local function convertToRussian(text)
    local conversionTable = {
        ["A"] = "Д", ["B"] = "Б", ["C"] = "Ҫ", ["D"] = "Ԁ", ["E"] = "Є", ["F"] = "Ғ",
        ["G"] = "Ԍ", ["H"] = "Ӊ", ["I"] = "Ї", ["J"] = "Ј", ["K"] = "Ҝ", ["L"] = "Ꙇ",
        ["M"] = "Ӎ", ["N"] = "Ҋ", ["O"] = "Ө", ["P"] = "Ҏ", ["Q"] = "Ѻ", ["R"] = "Я",
        ["S"] = "Ѕ", ["T"] = "Ꚍ", ["U"] = "Ҵ", ["V"] = "Ѵ", ["W"] = "Ѡ", ["X"] = "Ӝ",
        ["Y"] = "Ұ", ["Z"] = "Ѯ",
        ["a"] = "д", ["b"] = "б", ["c"] = "ҫ", ["d"] = "ԁ", ["e"] = "є", ["f"] = "ғ",
        ["g"] = "ԍ", ["h"] = "ӊ", ["i"] = "ї", ["j"] = "ј", ["k"] = "ҝ", ["l"] = "ꙇ",
        ["m"] = "ӎ", ["n"] = "ҋ", ["o"] = "ө", ["p"] = "ҏ", ["q"] = "ѻ", ["r"] = "я",
        ["s"] = "ѕ", ["t"] = "ꚍ", ["u"] = "ҵ", ["v"] = "ѵ", ["w"] = "ѡ", ["x"] = "ӝ",
        ["y"] = "ұ", ["z"] = "ѯ"
    }

    local russianText = ""

    for i = 1, #text do
        local char = string.sub(text, i, i)
        russianText = russianText .. (conversionTable[char] or char)
    end

    return russianText
end

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(0.4, 0, 0.3, 0)
scrollingFrame.Position = UDim2.new(0.3, 0, 0.35, 0)
scrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 16
scrollingFrame.Parent = gui

local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0.8, 0, 0.2, 0)
inputBox.Position = UDim2.new(0.1, 0, 0.1, 0)
inputBox.PlaceholderText = "Enter English text here"
inputBox.Font = Enum.Font.SourceSans
inputBox.TextSize = 20
inputBox.TextColor3 = Color3.new(0, 0, 0)
inputBox.BackgroundColor3 = Color3.new(0.9, 0.9, 0.9)
inputBox.Parent = scrollingFrame

local convertButton = Instance.new("TextButton")
convertButton.Size = UDim2.new(0.8, 0, 0.1, 0)
convertButton.Position = UDim2.new(0.1, 0, 0.35, 0)
convertButton.Text = "Convert to Russian"
convertButton.Font = Enum.Font.SourceSans
convertButton.TextSize = 20
convertButton.TextColor3 = Color3.new(1, 1, 1)
convertButton.BackgroundColor3 = Color3.new(0, 0.6, 0)
convertButton.Parent = scrollingFrame

local outputBox = Instance.new("TextBox")
outputBox.Size = UDim2.new(0.8, 0, 0.2, 0)
outputBox.Position = UDim2.new(0.1, 0, 0.45, 0)
outputBox.Font = Enum.Font.SourceSans
outputBox.TextSize = 20
outputBox.TextColor3 = Color3.new(0, 0, 0)
outputBox.BackgroundColor3 = Color3.new(0.9, 0.9, 0.9)
outputBox.TextEditable = false
outputBox.Parent = scrollingFrame

local copyButton = Instance.new("TextButton")
copyButton.Size = UDim2.new(0.2, 0, 0.1, 0)
copyButton.Position = UDim2.new(0.7, 0, 0.45, 0)
copyButton.Text = "Copy"
copyButton.Font = Enum.Font.SourceSans
copyButton.TextSize = 20
copyButton.TextColor3 = Color3.new(1, 1, 1)
copyButton.BackgroundColor3 = Color3.new(0, 0.6, 0)
copyButton.Parent = scrollingFrame

convertButton.MouseButton1Click:Connect(function()
    local englishText = inputBox.Text
    local russianText = convertToRussian(englishText)
    outputBox.Text = russianText
    
    -- Send message to chat bar
    game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
        Text = russianText,
        Color = Color3.new(1, 1, 1),
        Font = Enum.Font.SourceSans,
        FontSize = Enum.FontSize.Size24,
    })
end)

copyButton.MouseButton1Click:Connect(function()
    local clipboard = game:GetService("ClipboardService")
    clipboard:SetClipboard(outputBox.Text)
end)

-- Create circular minimize button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0.05, 0, 0.1, 0)
minimizeButton.Position = UDim2.new(0.85, 0, 0, 0)
minimizeButton.BackgroundColor3 = Color3.new(1, 0, 0)
minimizeButton.Text = ""
minimizeButton.Parent = scrollingFrame

local uiCorner1 = Instance.new("UICorner")
uiCorner1.CornerRadius = UDim.new(0.5, 0)
uiCorner1.Parent = minimizeButton

-- Create circular close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.05, 0, 0.1, 0)
closeButton.Position = UDim2.new(0.9, 0, 0, 0)
closeButton.BackgroundColor3 = Color3.new(1, 0, 0)
closeButton.Text = ""
closeButton.Parent = scrollingFrame

local uiCorner2 = Instance.new("UICorner")
uiCorner2.CornerRadius = UDim.new(0.5, 0)
uiCorner2.Parent = closeButton

-- Minimize button functionality
local minimized = false
local minimizedButton

minimizeButton.MouseButton1Click:Connect(function()
    if not minimized then
        -- Create minimized button
        minimizedButton = Instance.new("TextButton")
        minimizedButton.Size = UDim2.new(0.05, 0, 0.05, 0)
        minimizedButton.Position = UDim2.new(0, 0, 0.9, 0)
        minimizedButton.BackgroundColor3 = Color3.new(0, 0.6, 0)
        minimizedButton.Text = ""
        minimizedButton.Parent = gui

        local uiCorner3 = Instance.new("UICorner")
        uiCorner3.CornerRadius = UDim.new(0.5, 0)
        uiCorner3.Parent = minimizedButton

        scrollingFrame.Visible = false
        minimized = true

        minimizedButton.MouseButton1Click:Connect(function()
            scrollingFrame.Visible = true
            minimizedButton:Destroy()
            minimized = false
        end)
    end
end)

-- Close button functionality
closeButton.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Make GUI draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    scrollingFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

scrollingFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = scrollingFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

scrollingFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

-- Ensure GUI appears correctly on startup
gui.Enabled = true  -- Ensure the GUI is visible when the game starts
